#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# macOS
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# shell
alias v=nvim
alias c=pygmentize
function mkcd(){ mkdir -p $1; cd $1 }
function rmcwd(){ x=`pwd`; if [ $x = `cd; pwd` ]; then echo "in home!"; else cd ..; rm -rf $x; fi }
function cwdsh(){ if [[ -z $2 ]]; then eval $1; else pu $2; eval $1; po; fi }
alias lh='cwdsh "ls -d .*"'
alias lah='cwdsh "ls -lhd .*"'
alias uniqc='sort | uniq -c | sort'
alias topm='\top -o %MEM'
function psmem(){ # e.g. psmem chrome
    \top -bn 1 | grep $1 | cut -c32-36 - | awk '{s+=$1} END {print s}'
}
if brew command command-not-found-init > /dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi

# git
alias git=hub
alias gwD='git diff --no-ext-diff --word-diff=color' # prezto has mode plain (uses color and delimiters [-removed-] and {+added+}) as default
alias giD='git diff --no-ext-diff --cached --word-diff=color'
function gfcd(){
  git clone $1 && cd $(basename $1 | sed 's/\.git//')
}
alias gwc='git clean -d -n' # list
alias gwC='git clean -d -f' # remove
function gac(){ gia $1; gc $1 }
function gcA(){ gia .; gc }
alias gbxr='git push origin --delete' # delete remote branch
alias gsw='git stash push --include-untracked --keep-index' # replace prezto's gsw (push (instead of save) allows for pathspecs (since git 2.13), message with -m)
# TODO list stashes and unpushed changes
# should only list all **/.git/logs/refs/stash
# find -name stash -print0 | xargs -0 cat
function git-add-all-submodules(){
  for x in $(find . -type d) ; do if [ -d "${x}/.git" ] ; then cd "${x}" ; origin="$(git config --get remote.origin.url)" ; cd - 1>/dev/null; git submodule add "${origin}" "${x}" ; fi ; done
}

# git svn
# git svn doesn't know autostash...
function autostash(){ git stash | grep 'Saved working directory' && $* && git stash pop -q || $* }
alias sgfr='autostash git svn rebase'
alias sgc='git commit --verbose && git svn dcommit'

## OCaml
# opam configuration
test -r /Users/voglerr/.opam/opam-init/init.zsh && . /Users/voglerr/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
export OPAMKEEPBUILDDIR=true # support Merlin's Locate on all libs
export OCAMLPARAM="_,bin-annot=1"
export OCAMLRUNPARAM=b # enable backtraces on error
alias utop='utop -init ~/dotfiles/.ocamlinit -require batteries -require cil'
alias ocaml='rlwrap -H ~/.ocaml_history -D 2 -i -s 10000 ocaml'
function ocr(){
  ocamlc $1 && ./a.out && rm -f a.out
  rm -f $(basename $1 .ml).cm?
}

# don't want to commit .ipython/ and its prompt is annoying
alias ipython='ipython --no-confirm-exit'

## history
# HISTSIZE=10000
SAVEHIST=99000 # after ~1 year ~/.zhistory has 8300 lines, so this should last a lifetime...

function archive(){ # save file(s) as (encrypted) archive to dropbox
    dst=~/Dropbox/$1.7z
    rm -f $dst
    7z a -mhe=on -p -l $dst $* # if a password is given, the header will also be encrypted. resolves symlinks.
}
if [[ "$OSTYPE" == darwin* ]]; then
  alias google-chrome='open -a "Google Chrome"'
  alias subl='open -a "Sublime Text"'
else
  if hash brew 2>/dev/null; then
    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
  fi
fi
# alias cya='~/gitdrop.sh save && sudo pm-suspend'
# function clip(){
#     echo $* | xclip -selection clipboard
# }
# alias pingor='ping -c 1 google.com || sudo systemctl restart dhcpcd@enp0s3.service'
# eval "$(thefuck --alias)"
# function fsw(){ fswatch -o $1 | xargs -n1 "$2" }
# alias c='pygmentize -O style=monokai -f console256 -g'
source "${ZDOTDIR:-$HOME}/.zprezto/gtm-terminal-plugin/gtm-plugin.sh" # git time metric

# added by travis gem
[ -f /Users/voglerr/.travis/travis.sh ] && source /Users/voglerr/.travis/travis.sh
