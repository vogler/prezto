#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# macOS
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
function brew-upgrade-each() {
  brew outdated
  for p in $(brew outdated | cut -f1); do
    brew upgrade $p;
  done
}

# debian/ubuntu
if [[ -e $commands[apt] ]]; then
  alias agi='sudo apt-get install'
  # alias agu='sudo apt-get upgrade -u'
  alias agu='sudo apt-get update; sudo apt full-upgrade'
  alias ags='apt-cache search'
  alias agd='apt-cache show'
  alias agp='apt-cache -t jessie-backports showpkg'
fi

# shell
alias v=nvim
alias c=pygmentize
function mv(){
  dir=$(dirname -- "${@: -1}".); dir=${dir%.} # fix dirname not respecting trailing slashes by appending a . and removing it after!
  if [ ! -z "$dir" ]; then # for . and options like --help, $dir is empty and mkdir would complain
    mkdir --parents --verbose -- "$dir"
  fi
  command mv $@
}
function dus() { du -h -d1 $1 | sort -h }
function mkcd(){ mkdir -p $1; cd $1 }
function rmcwd(){ x=`pwd`; if [ $x = `cd; pwd` ]; then echo "in home!"; else cd ..; rm -rf $x; fi }
function cwdsh(){ if [[ -z $2 ]]; then eval $1; else pu $2; eval $1; po; fi }
alias lh='cwdsh "ls -d .*"'
alias lah='cwdsh "ls -lhd .*"'
alias uniqc='sort | uniq -c | sort'
alias topm='\top -o %MEM'
function psmem(){ # e.g. psmem chrome
    \top -bn 1 | grep $1 | cut -c32-36 - | awk '{s+=$1} END {print s}'
}
if brew command command-not-found-init > /dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi
# f for fff (file manager, https://github.com/dylanaraps/fff) with cd on exit (q), use ctrl-c to exit w/o cd
f() {
    fff "$@"
    cd "$(cat "${XDG_CACHE_HOME:=${HOME}/.cache}/fff/.fff_d")"
}
# mv $1 to $2 (e.g. /etc/foo to $2/etc/foo), ln -s and git add it
# function gln(){ TODO }

# git
if [[ -e $commands[hub] ]]; then
  alias git=hub
fi
alias gwD='git diff --no-ext-diff --word-diff=color' # prezto has mode plain (uses color and delimiters [-removed-] and {+added+}) as default
alias giD='git diff --no-ext-diff --cached --word-diff=color'
function gfcd(){
  git clone $1 && cd $(basename $1 | sed 's/\.git//')
}
alias gwc='git clean -d -n' # list
alias gwC='git clean -d -f' # remove
function gac(){ gia $1; gc $1 }
function gcA(){ gia .; gc }
alias gbxr='git push origin --delete' # delete remote branch
alias gbv='git branch -vv' # instead of just -v: also show remote-tracking branches
alias gsw='git stash push --keep-index' # replace prezto's gsw (push (instead of save) allows for pathspecs (since git 2.13), message with -m)
alias gsW='git stash push --keep-index --include-untracked'
# TODO list stashes and unpushed changes
# should only list all **/.git/logs/refs/stash
# find -name stash -print0 | xargs -0 cat
function git-add-all-submodules(){
  dir=${1-'.'} # will search in $1 but add in cwd!
  for x in $(find $dir -type d) ; do if [ -d "${x}/.git" ] ; then cd "${x}" ; origin="$(git config --get remote.origin.url)" ; cd - 1>/dev/null; git submodule add "${origin}" "${x}" ; fi ; done
}
function git-repos(){
  dir=${1-'.'}
  if [[ -e $commands[fd] ]]; then
    # https://github.com/sharkdp/fd is 2-5x faster than find for this query
    fd --type d --hidden --no-ignore '^\.git$' $dir
  else
    find $dir -type d -name ".git"
  fi
}

# git svn
# git svn doesn't know autostash...
function autostash(){ git stash | grep 'Saved working directory' && $* && git stash pop -q || $* }
alias sgfr='autostash git svn rebase'
alias sgc='git commit --verbose && git svn dcommit'

# C
function gcc-run(){
  gcc $1 && ./a.out && rm -f a.out
}
function gcc-eval(){ # needs double escape: gcc-eval 'printf("INT_MAX: %d\\n", INT_MAX)'
  echo "#include <stdlib.h>\n #include <stdio.h>\n #include <assert.h>\n\
    #include <limits.h>\n #include <stdint.h>\n #include <math.h>\n\
    int main(){ $1; }" >! /tmp/gcc-eval.c &&
    gcc-run /tmp/gcc-eval.c
}

## OCaml
# opam configuration
test -r /Users/voglerr/.opam/opam-init/init.zsh && . /Users/voglerr/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
export OPAMKEEPBUILDDIR=true # support Merlin's Locate on all libs
export OCAMLPARAM="_,bin-annot=1"
export OCAMLRUNPARAM=b # enable backtraces on error
export OPAMWITHDOC=true # opam install --with-doc ...
alias utop='utop -init ~/dotfiles/.ocamlinit-utop -implicit-bindings -require batteries -require cil'
alias ocaml='rlwrap -H ~/.ocaml_history -D 2 -i -s 10000 ocaml'
function ocr(){
  ocamlc $1 && ./a.out && rm -f a.out
  rm -f $(basename $1 .ml).cm?
}

# don't want to commit .ipython/ and its prompt is annoying
alias ipython='ipython --no-confirm-exit'

## history
# HISTSIZE=10000
SAVEHIST=99000 # after ~1 year ~/.zhistory has 8300 lines, so this should last a lifetime...

function archive(){ # save file(s) as (encrypted) archive to dropbox
    dst=~/Dropbox/$1.7z
    rm -f $dst
    7z a -mhe=on -p -l $dst $* # if a password is given, the header will also be encrypted. resolves symlinks.
}
if [[ "$OSTYPE" == darwin* ]]; then
  alias google-chrome='open -a "Google Chrome"'
  alias subl='open -a "Sublime Text"'
else
  [ -f /home/linuxbrew/.linuxbrew/bin/brew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
  [ -f ~/.linuxbrew/bin/brew ] && eval $(~/.linuxbrew/bin/brew shellenv)
fi
# alias cya='~/gitdrop.sh save && sudo pm-suspend'
# function clip(){
#     echo $* | xclip -selection clipboard
# }
# alias pingor='ping -c 1 google.com || sudo systemctl restart dhcpcd@enp0s3.service'
# eval "$(thefuck --alias)"
# function fsw(){ fswatch -o $1 | xargs -n1 "$2" }
# alias c='pygmentize -O style=monokai -f console256 -g'
if [[ -e $commands[gtm] ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/gtm-terminal-plugin/gtm-plugin.sh" # git time metric
fi

# added by travis gem
[ -f /Users/voglerr/.travis/travis.sh ] && source /Users/voglerr/.travis/travis.sh

# the following should be in zpreztorc but bindkey has no effect there
# https://github.com/zsh-users/zsh-autosuggestions#key-bindings
# use the suggested '^ ' since I need ^M (CR, enter key) and ^J (LF) for accept-line and ^O for accept+execute menu completion
bindkey '^ ' autosuggest-execute
bindkey '^X^I' glob-alias # '^ ' was glob-alias, which is useful to completely expand aliases and variables
bindkey '^X^T' autosuggest-toggle

if [[ -e $commands[broot] ]]; then
  if [[ "$OSTYPE" == darwin* ]]; then
    source ~/Library/Preferences/org.dystroy.broot/launcher/bash/br
  fi
fi
